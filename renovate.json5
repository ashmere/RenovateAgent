{
  // Renovate configuration schema
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",

  // Use recommended configuration as base
  "extends": [
    "config:recommended"
  ],

  // Dashboard configuration
  "dependencyDashboardTitle": "Renovate Dashboard",
  "dependencyDashboardLabels": [
    "renovate",
    "dependencies"
  ],
  "dependencyDashboardOSVVulnerabilitySummary": "all",

  // Major version updates require approval
  "major": {
    "dependencyDashboardApproval": true
  },

  // Enable OSV vulnerability alerts
  "osvVulnerabilityAlerts": true,

  // Target main branch
  "baseBranches": [
    "main"
  ],

  // Timezone and scheduling
  "timezone": "UTC",
  "schedule": [
    "before 10am every weekday"
  ],

  // Default labels for PRs
  "labels": [
    "renovate",
    "dependencies",
    "{{{updateType}}}",
    "renovate/datasource/{{{datasource}}}",
    "renovate/manager/{{{manager}}}"
  ],

  // Assign PRs to maintainer
  "assignees": [
    "ashmere"
  ],

  // Package-specific rules
  "packageRules": [
    {
      // Python runtime version handling
      "description": "Override commitMessageExtra for python",
      "matchPackageNames": [
        "python/cpython",
        "python",
        "docker.io/python",
        "docker.io/library/python",
        "mcr.microsoft.com/devcontainers/python"
      ],
      "commitMessageExtra": "to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isMajor}}{{prettyNewMajor}}{{else}}{{#if isMinor}}v{{newMajor}}.{{newMinor}}{{else}}{{#if isSingleVersion}}{{prettyNewVersion}}{{else}}{{#if newValue}}{{{newValue}}}{{else}}{{{newDigestShort}}}{{/if}}{{/if}}{{/if}}{{/if}}{{/if}}"
    },
    {
      // Python major/minor versions need approval
      "description": "Require approval for python major and minor versions",
      "matchPackageNames": [
        "python/cpython",
        "python",
        "docker.io/python",
        "docker.io/library/python",
        "mcr.microsoft.com/devcontainers/python"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "dependencyDashboardApproval": true
    },
    {
      // Group Python packages together
      "description": "Group python packages",
      "matchPackageNames": [
        "python/cpython",
        "python",
        "docker.io/python",
        "docker.io/library/python",
        "mcr.microsoft.com/devcontainers/python"
      ],
      "groupName": "python runtime patches",
      "separateMultipleMinor": true,
      "separateMinorPatch": true
    },
    {
      // Python patch releases can be auto-merged
      "description": "Python patch releases with scheduling to bypass rate limits",
      "matchPackageNames": [
        "python/cpython",
        "python",
        "docker.io/python",
        "docker.io/library/python",
        "mcr.microsoft.com/devcontainers/python"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "prPriority": 10,
      "schedule": "at any time",
      "prCreation": "immediate",
      "dependencyDashboardApproval": false,
      "prHourlyLimit": 0,
      "prConcurrentLimit": 0
    },
    {
      // Python versioning strategy
      "description": "Offer separate patch and minor versions for Python",
      "matchPackageNames": [
        "python/cpython"
      ],
      "versioning": "pep440",
      "separateMinorPatch": true,
      "separateMajorMinor": true
    },
    {
      // Poetry dependency management
      "description": "Python dependencies via Poetry",
      "matchManagers": [
        "poetry"
      ],
      "groupName": "Python dependencies",
      "schedule": [
        "before 10am every weekday"
      ]
    },
    {
      // GitHub Actions auto-merge
      "description": "GitHub Actions with automerge",
      "matchManagers": [
        "github-actions"
      ],
      "groupName": "GitHub Actions",
      "schedule": [
        "before 10am every weekday"
      ],
      "automerge": true,
      "automergeType": "pr",
      "platformAutomerge": true
    }
  ],

  // Custom managers for Python version detection
  "customManagers": [
    {
      // Update Python version in GitHub workflows
      "description": "Update python version in github workflows",
      "customType": "regex",
      "managerFilePatterns": [
        "/^.github/workflows/.+\\.yaml$/"
      ],
      "matchStrings": [
        "\\s+python-version: [\\'\"]?(?<currentValue>.+?)[\\'\"]?\\s"
      ],
      "depNameTemplate": "python/cpython",
      "datasourceTemplate": "github-releases"
    },
    {
      // Update Python version in .python-version files
      "description": "Update python version in .python-version files",
      "customType": "regex",
      "managerFilePatterns": [
        "/^\\.python-version$/"
      ],
      "matchStrings": [
        "^(?<currentValue>.+?)\\s*$"
      ],
      "depNameTemplate": "python/cpython",
      "datasourceTemplate": "github-releases"
    },
    {
      // Update Python versions in pyproject.toml
      "description": "Update python versions in pyproject.toml (requires-python and Poetry dependencies)",
      "customType": "regex",
      "managerFilePatterns": [
        "/pyproject\\.toml$/"
      ],
      "matchStrings": [
        "requires-python\\s*=\\s*[\\'\"]>=?(?<currentValue>[^\\'\"]+)[\\'\"]",
        "python\\s*=\\s*[\\'\"]~?(?<currentValue>[0-9.]+)[\\'\"]"
      ],
      "depNameTemplate": "python/cpython",
      "datasourceTemplate": "github-releases"
    },
    {
      // Update Python Docker images
      "description": "Update python docker images in Dockerfiles (regular and alpine)",
      "customType": "regex",
      "managerFilePatterns": [
        "/Dockerfile/"
      ],
      "matchStrings": [
        "(\\s|/)python:(?<currentValue>\\d+\\.\\d+(?:\\.\\d+)?)-",
        "(\\s|/)python:(?<currentValue>\\d+\\.\\d+(?:\\.\\d+)?)-alpine"
      ],
      "depNameTemplate": "python",
      "datasourceTemplate": "docker"
    }
  ],

  // Rate limiting
  "prHourlyLimit": 2,
  "prConcurrentLimit": 5,

  // Rebase strategy
  "rebaseWhen": "conflicted",

  // Lock file maintenance
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": [
      "before 10am on monday"
    ]
  }
}
